{
    "version": 3,
    "sources": [
        "../../../src/update/controller/version.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;qBAIQ,W;;;;;;;AACE,gC,GAAO;AACP,uCAAO,GADA;AAEP,uCAAO,GAFA;AAGP,uCAAO,GAHA;AAIP,qCAAK,mBAJE;AAKP,6CAAa,IALN;AAMP,0DAA0B;AANnB,6B;;mCAQQ,KAAK,KAAL,CAAW,SAAX,EAAsB,GAAtB,CAA0B,IAA1B,C;;;AAAf,kC;;AACJ,iCAAK,OAAL,CAAa,MAAb;;;;;;;;;;;;;;;;;qBAGE,S;;;;;;;AACE,gC,GAAO;AACP,uCAAO,GADA;AAEP,uCAAO,GAFA;AAGP,uCAAO,GAHA;AAIP,qCAAK,mBAJE;AAKP,6CAAa,IALN;AAMP,0DAA0B;AANnB,6B;;mCAQQ,KAAK,KAAL,CAAW,SAAX,EAAsB,GAAtB,CAA0B,IAA1B,C;;;AAAf,kC;;AACJ,iCAAK,OAAL,CAAa,MAAb;;;;;;;;;;;;;;;;;AAGJ;;;;;;;;qBAMM,sB;;;;;;;;mCAEe,KAAK,KAAL,CAAW,SAAX,EAAsB,MAAtB,E;;;AAAb,gC;;AACJ,iCAAK,OAAL,CAAa,IAAb;;;;;;;;;;;;;;;;;AAGJ;;;;;;;;qBAMM,kB;;;;;;;AACF;AACI,oC,GAAW,KAAK,GAAL,CAAS,UAAT,C;AACf;;;mCACiB,KAAK,KAAL,CAAW,SAAX,EAAsB,KAAtB,CAA4B;AACzC,2CAAW;AAD8B,6BAA5B,EAEd,KAFc,CAER;AACL,oCAAI;AADC,6BAFQ,EAId,MAJc,E;;;AAAb,gC;AAMA,kC,GAAS,I;;kCAET,QAAQ,KAAK,MAAL,GAAc,C;;;;;;mCAEO,KAAK,KAAL,CAAW,mBAAX,EAAgC,KAAhC,CAAsC;AAC/D,oCAAI,KAAK,CAAL,EAAQ;AADmD,6BAAtC,EAE1B,MAF0B,E;;;AAAzB,4C;;;AAIJ,gCAAI,CAAC,gBAAD,IAAqB,iBAAiB,MAAjB,IAA2B,CAApD,EAAuD;AACnD,qCAAK,IAAL,CAAU;AACN,kDAAc;AADR,iCAAV;AAGH;AACD,qCAAS,KAAK,aAAL,CAAmB,KAAK,CAAL,CAAnB,EAA4B,iBAAiB,CAAjB,CAA5B,CAAT;;;;;;AAGA,iCAAK,IAAL,CAAU;AACN,8CAAc;AADR,6BAAV;;;AAIJ;AACA,iCAAK,IAAL,CAAU,MAAV;;;;;;;;;;;;;;;;;AAGJ;;;;;;;;;;qBAQA,a,0BAAc,O,EAAS,gB,EAAiB;AACpC,eAAO;AACH,qBAAS,QAAQ,KAAR,CAAc,QAAd,KAAyB,GAAzB,GAA8B,QAAQ,KAAR,CAAc,QAAd,EAA9B,GAAwD,GAAxD,GAA6D,QAAQ,KAAR,CAAc,QAAd,EADnE;AAEH,iCAAqB,iBAAiB,KAAjB,CAAuB,QAAvB,KAAkC,GAAlC,GAAuC,iBAAiB,KAAjB,CAAuB,QAAvB,EAAvC,GAAyE,GAAzE,GAA8E,iBAAiB,KAFjH;AAGH,iBAAK;AACD,qBAAK,QAAQ,GADZ;AAED,4BAAY,QAAQ,WAAR,IAAuB;AAFlC;AAHF,SAAP;AAQH,K",
    "file": "../../../src/update/controller/version.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n\n  async indexAction(){\n      let data = {\n          major: '1',\n          minor: '0',\n          patch: '0',\n          url: '/index.ios.bundle',\n          is_relative: true,\n          min_container_version_id: '1'\n      };\n      let result = await this.model('version').add(data);\n      this.success(result);\n  }\n\n  async addAction(){\n      let data = {\n          major: '1',\n          minor: '0',\n          patch: '0',\n          url: '/index.ios.bundle',\n          is_relative: true,\n          min_container_version_id: '1'\n      };\n      let result = await this.model('version').add(data);\n      this.success(result);\n  }\n\n  /**\n   * 获取当前所有版本\n   * @method selectallversionAction\n   * @return {[type]}               [description]\n   * @author jimmy\n   */\n  async selectallversionAction(){\n\n      let data = await this.model('version').select();\n      this.success(data);\n  }\n\n  /**\n   * 获取当前最新版本号\n   * @method selectlatestAction\n   * @return {[type]}           [description]\n   * @author jimmy\n   */\n  async selectlatestAction(){\n      //获取应用bundleId\n      let bundleId = this.get('bundleId');\n      //从数据库查询数据\n      let data = await this.model('version').where({\n          bundle_id: bundleId,\n      }).order({\n          id: 'DESC',\n      }).select();\n\n      let result = null;\n\n      if (data && data.length > 0) {\n          //获取原生app版本信息\n          let containerVersion = await this.model('container_version').where({\n              id: data[0].min_container_version_id,\n          }).select();\n\n          if (!containerVersion || containerVersion.length <= 0) {\n              this.fail({\n                  errorMessage: '无该记录',\n              });\n          }\n          result = this.formatVersion(data[0], containerVersion[0]);\n\n      } else {\n          this.fail({\n              errorMessage: '无该记录',\n          });\n      }\n      //返回结果\n      this.json(result);\n  }\n\n  /**\n   * 格式化版本\n   * @method formatVersion\n   * @param  {[type]}      version          [description]\n   * @param  {[type]}      containerVersion [description]\n   * @return {[type]}                       [description]\n   * @author jimmy\n   */\n  formatVersion(version, containerVersion){\n      return {\n          version: version.major.toString()+'.'+ version.minor.toString() +'.'+ version.patch.toString(),\n          minContainerVersion: containerVersion.major.toString()+'.'+ containerVersion.minor.toString()+'.'+ containerVersion.patch,\n          url: {\n              url: version.url,\n              isRelative: version.is_relative == 1,\n          }\n      }\n  }\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "../../../src/update/controller/version.js"
    ],
    "names": [
        "indexAction",
        "data",
        "major",
        "minor",
        "patch",
        "url",
        "is_relative",
        "min_container_version_id",
        "model",
        "add",
        "result",
        "success",
        "addAction",
        "selectallversionAction",
        "select",
        "selectlatestAction",
        "bundleId",
        "get",
        "where",
        "bundle_id",
        "order",
        "id",
        "length",
        "containerVersion",
        "fail",
        "errorMessage",
        "formatVersion",
        "json",
        "version",
        "toString",
        "minContainerVersion",
        "isRelative"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;qBAIQA,W;;;;;;;AACEC,gC,GAAO;AACPC,uCAAO,GADA;AAEPC,uCAAO,GAFA;AAGPC,uCAAO,GAHA;AAIPC,qCAAK,mBAJE;AAKPC,6CAAa,IALN;AAMPC,0DAA0B;AANnB,6B;;mCAQQ,KAAKC,KAAL,CAAW,SAAX,EAAsBC,GAAtB,CAA0BR,IAA1B,C;;;AAAfS,kC;;AACJ,iCAAKC,OAAL,CAAaD,MAAb;;;;;;;;;;;;;;;;;qBAGEE,S;;;;;;;AACEX,gC,GAAO;AACPC,uCAAO,GADA;AAEPC,uCAAO,GAFA;AAGPC,uCAAO,GAHA;AAIPC,qCAAK,mBAJE;AAKPC,6CAAa,IALN;AAMPC,0DAA0B;AANnB,6B;;mCAQQ,KAAKC,KAAL,CAAW,SAAX,EAAsBC,GAAtB,CAA0BR,IAA1B,C;;;AAAfS,kC;;AACJ,iCAAKC,OAAL,CAAaD,MAAb;;;;;;;;;;;;;;;;;AAGJ;;;;;;;;qBAMMG,sB;;;;;;;;mCAEe,KAAKL,KAAL,CAAW,SAAX,EAAsBM,MAAtB,E;;;AAAbb,gC;;AACJ,iCAAKU,OAAL,CAAaV,IAAb;;;;;;;;;;;;;;;;;AAGJ;;;;;;;;qBAMMc,kB;;;;;;;AACF;AACIC,oC,GAAW,KAAKC,GAAL,CAAS,UAAT,C;AACf;;;mCACiB,KAAKT,KAAL,CAAW,SAAX,EAAsBU,KAAtB,CAA4B;AACzCC,2CAAWH;AAD8B,6BAA5B,EAEdI,KAFc,CAER;AACLC,oCAAI;AADC,6BAFQ,EAIdP,MAJc,E;;;AAAbb,gC;AAMAS,kC,GAAS,I;;kCAETT,QAAQA,KAAKqB,MAAL,GAAc,C;;;;;;mCAEO,KAAKd,KAAL,CAAW,mBAAX,EAAgCU,KAAhC,CAAsC;AAC/DG,oCAAIpB,KAAK,CAAL,EAAQM;AADmD,6BAAtC,EAE1BO,MAF0B,E;;;AAAzBS,4C;;;AAIJ,gCAAI,CAACA,gBAAD,IAAqBA,iBAAiBD,MAAjB,IAA2B,CAApD,EAAuD;AACnD,qCAAKE,IAAL,CAAU;AACNC,kDAAc;AADR,iCAAV;AAGH;AACDf,qCAAS,KAAKgB,aAAL,CAAmBzB,KAAK,CAAL,CAAnB,EAA4BsB,iBAAiB,CAAjB,CAA5B,CAAT;;;;;;AAGA,iCAAKC,IAAL,CAAU;AACNC,8CAAc;AADR,6BAAV;;;AAIJ;AACA,iCAAKE,IAAL,CAAUjB,MAAV;;;;;;;;;;;;;;;;;AAGJ;;;;;;;;;;qBAQAgB,a,0BAAcE,O,EAASL,gB,EAAiB;AACpC,eAAO;AACHK,qBAASA,QAAQ1B,KAAR,CAAc2B,QAAd,KAAyB,GAAzB,GAA8BD,QAAQzB,KAAR,CAAc0B,QAAd,EAA9B,GAAwD,GAAxD,GAA6DD,QAAQxB,KAAR,CAAcyB,QAAd,EADnE;AAEHC,iCAAqBP,iBAAiBrB,KAAjB,CAAuB2B,QAAvB,KAAkC,GAAlC,GAAuCN,iBAAiBpB,KAAjB,CAAuB0B,QAAvB,EAAvC,GAAyE,GAAzE,GAA8EN,iBAAiBnB,KAFjH;AAGHC,iBAAK;AACDA,qBAAKuB,QAAQvB,GADZ;AAED0B,4BAAYH,QAAQtB,WAAR,IAAuB;AAFlC;AAHF,SAAP;AAQH,K",
    "file": "../../../src/update/controller/version.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n\n  async indexAction(){\n      let data = {\n          major: '1',\n          minor: '0',\n          patch: '0',\n          url: '/index.ios.bundle',\n          is_relative: true,\n          min_container_version_id: '1'\n      };\n      let result = await this.model('version').add(data);\n      this.success(result);\n  }\n\n  async addAction(){\n      let data = {\n          major: '1',\n          minor: '0',\n          patch: '0',\n          url: '/index.ios.bundle',\n          is_relative: true,\n          min_container_version_id: '1'\n      };\n      let result = await this.model('version').add(data);\n      this.success(result);\n  }\n\n  /**\n   * 获取当前所有版本\n   * @method selectallversionAction\n   * @return {[type]}               [description]\n   * @author jimmy\n   */\n  async selectallversionAction(){\n\n      let data = await this.model('version').select();\n      this.success(data);\n  }\n\n  /**\n   * 获取当前最新版本号\n   * @method selectlatestAction\n   * @return {[type]}           [description]\n   * @author jimmy\n   */\n  async selectlatestAction(){\n      //获取应用bundleId\n      let bundleId = this.get('bundleId');\n      //从数据库查询数据\n      let data = await this.model('version').where({\n          bundle_id: bundleId,\n      }).order({\n          id: 'DESC',\n      }).select();\n\n      let result = null;\n\n      if (data && data.length > 0) {\n          //获取原生app版本信息\n          let containerVersion = await this.model('container_version').where({\n              id: data[0].min_container_version_id,\n          }).select();\n\n          if (!containerVersion || containerVersion.length <= 0) {\n              this.fail({\n                  errorMessage: '无该记录',\n              });\n          }\n          result = this.formatVersion(data[0], containerVersion[0]);\n\n      } else {\n          this.fail({\n              errorMessage: '无该记录',\n          });\n      }\n      //返回结果\n      this.json(result);\n  }\n\n  /**\n   * 格式化版本\n   * @method formatVersion\n   * @param  {[type]}      version          [description]\n   * @param  {[type]}      containerVersion [description]\n   * @return {[type]}                       [description]\n   * @author jimmy\n   */\n  formatVersion(version, containerVersion){\n      return {\n          version: version.major.toString()+'.'+ version.minor.toString() +'.'+ version.patch.toString(),\n          minContainerVersion: containerVersion.major.toString()+'.'+ containerVersion.minor.toString()+'.'+ containerVersion.patch,\n          url: {\n              url: version.url,\n              isRelative: version.is_relative == 1,\n          }\n      }\n  }\n}\n"
    ]
}
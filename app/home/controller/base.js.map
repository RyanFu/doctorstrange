{
    "version": 3,
    "sources": [
        "../../../src/home/controller/base.js"
    ],
    "names": [
        "__before",
        "__CLIENT_DATA__",
        "templateFile",
        "join",
        "__dirname",
        "isLogin",
        "session",
        "token",
        "user",
        "username",
        "name",
        "oldDisplay",
        "display",
        "args",
        "assign",
        "encodeURIComponent",
        "apply",
        "think",
        "isEmpty",
        "controller",
        "base"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;AAGE;;;;mBAIOA,Q;;;;;;;;;AACF,mBAAKC,eAAL,GAAuB,EAAvB;AACA,mBAAKC,YAAL,GAAoB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,qCAArB,CAApB;;qBACoB,KAAKC,OAAL,E;;;AAAhBA,qB;;qBACc,KAAKC,OAAL,CAAa,eAAb,C;;;AAAdC,mB;;AACJ,mBAAKN,eAAL,CAAqBI,OAArB,GAA+BA,OAA/B;AACA,mBAAKJ,eAAL,CAAqBM,KAArB,GAA6BA,KAA7B;;mBAEIF,O;;;;;;qBACiB,KAAKC,OAAL,CAAa,UAAb,C;;;AAAbE,kB;;AACJ,mBAAKP,eAAL,CAAqBQ,QAArB,GAAgCD,KAAKE,IAArC;;;AAGAC,wB,GAAa,KAAKC,O;;AACtB,mBAAKA,OAAL,GAAe,YAAa;AAAA,kDAATC,IAAS;AAATA,sBAAS;AAAA;;AAE1B,uBAAKC,MAAL,CAAY,iBAAZ,EAA+BC,mBAAmB,yBAAe,OAAKd,eAApB,CAAnB,CAA/B;AACAU,2BAAWK,KAAX,SAAuBH,IAAvB;AACD,eAJD;;;;;;;;;;;;;;;;;mBAQER,O;;;;;;;;qBACa,KAAKC,OAAL,CAAa,UAAb,C;;;;;;;;;;6BAA4B,E;;;AAAzCE,kB;gDACG,CAACS,MAAMC,OAAN,CAAcV,IAAd,C;;;;;;;;;;;;;;;;;;EA7BgBS,MAAME,UAAN,CAAiBC,I",
    "file": "../../../src/home/controller/base.js",
    "sourcesContent": [
        "'use strict';\nimport path from 'path'\n\nexport default class extends think.controller.base {\n  /**\n   * some base method in here\n   */\n\n   async __before() {\n       this.__CLIENT_DATA__ = {};\n       this.templateFile = path.join(__dirname, '../../../view/home/index_index.html');\n       let isLogin = await this.isLogin();\n       let token = await this.session('__HOTUPDATE__');\n       this.__CLIENT_DATA__.isLogin = isLogin;\n       this.__CLIENT_DATA__.token = token;\n\n       if (isLogin) {\n           let user = await this.session('userInfo');\n           this.__CLIENT_DATA__.username = user.name;\n       }\n\n       let oldDisplay = this.display;\n       this.display = (...args) => {\n\n         this.assign('__CLIENT_DATA__', encodeURIComponent(JSON.stringify(this.__CLIENT_DATA__)));\n         oldDisplay.apply(this, args);\n       }\n   }\n\n\n   async isLogin() {\n     let user = await this.session('userInfo') || {};\n     return !think.isEmpty(user);\n   }\n}\n"
    ]
}
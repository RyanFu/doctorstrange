{
    "version": 3,
    "sources": [
        "../../../src/home/controller/register.js"
    ],
    "names": [
        "indexAction",
        "username",
        "post",
        "password",
        "email",
        "phone",
        "ip",
        "http",
        "userModal",
        "model",
        "addUser",
        "userName",
        "status",
        "type",
        "fail",
        "success",
        "addAction"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;AAGE;;;;mBAIMA,W;;;;;;;AACEC,sB,GAAW,KAAKC,IAAL,CAAU,UAAV,C;AACXC,sB,GAAW,KAAKD,IAAL,CAAU,UAAV,C;AACXE,mB,GAAQ,KAAKF,IAAL,CAAU,OAAV,C;AACRG,mB,GAAQ,KAAKH,IAAL,CAAU,OAAV,C;AACRI,gB,GAAK,KAAKC,IAAL,CAAUD,EAAV,E;AAELE,uB,GAAY,KAAKC,KAAL,CAAW,MAAX,C;;qBAEGD,UAAUE,OAAV,CAAkB;AACnCC,0BAAUV,QADyB;AAEnCG,uBAAOA,KAF4B;AAGnCD,0BAAUA,QAHyB;AAInCE,uBAAOA;AAJ4B,eAAlB,EAKhBC,EALgB,C;;;AAAfM,oB;;oBAOAA,OAAOC,IAAP,IAAe,O;;;;;+CACV,KAAKC,IAAL,CAAU,OAAV,C;;;oBAEAF,OAAOC,IAAP,KAAgB,K;;;;;+CAChB,KAAKC,IAAL,CAAU,eAAV,C;;;+CAGF,KAAKC,OAAL,CAAaH,MAAb,C;;;;;;;;;;;;;;;;;mBAGLI,S;;;;;;;AACAf,sB,GAAW,KAAKC,IAAL,CAAU,UAAV,C;AACXC,sB,GAAW,KAAKD,IAAL,CAAU,UAAV,C;AACXE,mB,GAAQ,KAAKF,IAAL,CAAU,OAAV,C;AACRI,gB,GAAK,KAAKC,IAAL,CAAUD,EAAV,E;AAELE,uB,GAAY,KAAKC,KAAL,CAAW,YAAX,C;;qBAEGD,UAAUE,OAAV,CAAkB;AACnCT,0BAAUA,QADyB;AAEnCG,uBAAOA,KAF4B;AAGnCD,0BAAUA,QAHyB;AAInCU,sBAAM;AAJ6B,eAAlB,EAKhBP,EALgB,C;;;AAAfM,oB;;oBAMAA,OAAOC,IAAP,IAAe,O;;;;;gDACV,KAAKC,IAAL,CAAU,YAAV,C;;;oBAEAF,OAAOC,IAAP,KAAgB,K;;;;;gDAChB,KAAKC,IAAL,CAAU,eAAV,C;;;gDAGF,KAAKC,OAAL,CAAaH,MAAb,C",
    "file": "../../../src/home/controller/register.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async indexAction() {\n      let username = this.post('userName');\n      let password = this.post('password');\n      let email = this.post('email');\n      let phone = this.post('phone');\n      let ip = this.http.ip();\n\n      let userModal = this.model('user');\n\n      let status = await userModal.addUser({\n        userName: username,\n        email: email,\n        password: password,\n        phone: phone,\n      }, ip);\n\n      if (status.type == 'exist') {\n        return this.fail('用户已存在');\n      }\n      else if (status.type !== 'add') {\n        return this.fail('ACCOUNT_ERROR');\n      }\n\n      return this.success(status);\n  }\n\n  async addAction () {\n    let username = this.post('username');\n    let password = this.post('password');\n    let email = this.post('email');\n    let ip = this.http.ip();\n\n    let userModal = this.model('admin/user');\n\n    let status = await userModal.addUser({\n      username: username,\n      email: email,\n      password: password,\n      type: 0\n    }, ip);\n    if (status.type == 'exist') {\n      return this.fail('USER_EXIST');\n    }\n    else if (status.type !== 'add') {\n      return this.fail('ACCOUNT_ERROR');\n    }\n\n    return this.success(status);\n  }\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "../../../src/home/controller/login.js"
    ],
    "names": [
        "indexAction",
        "isLogin",
        "redirect",
        "display",
        "templateFile",
        "loginAction",
        "userName",
        "post",
        "password",
        "validate",
        "properties",
        "required",
        "pattern",
        "type",
        "description",
        "valid",
        "fail",
        "ip",
        "model",
        "login",
        "result",
        "getMsg",
        "session",
        "success",
        "status",
        "logoutAction",
        "isAjax",
        "msg"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;;;AAGE;;;;mBAIMA,W;;;;;;;;qBACgB,KAAKC,OAAL,E;;;AAAhBA,qB;;mBAEAA,O;;;;;+CACK,KAAKC,QAAL,CAAc,GAAd,C;;;+CAGF,KAAKC,OAAL,CAAa,KAAKC,YAAlB,C;;;;;;;;;;;;;;;;;mBAGHC,W;;;;;;;;qBACgB,KAAKJ,OAAL,E;;;AAAhBA,qB;;kBACCA,O;;;;;AACCK,sB,GAAW,KAAKC,IAAL,CAAU,UAAV,C;AACXC,sB,GAAW,KAAKD,IAAL,CAAU,UAAV,C;AACXE,sB,GAAW,sBAAWA,QAAX,CAAoB;AACjCH,0BAAUA,QADuB;AAEjCE,0BAAUA;AAFuB,eAApB,EAGZ;AACDE,4BAAY;AACVJ,4BAAU;AACRK,8BAAU,IADF;AAERC,6BAAS,gBAFD;AAGRC,0BAAM,QAHE;AAIRC,iCAAa;AAJL,mBADA;AAOVN,4BAAU;AACRG,8BAAU,IADF;AAERC,6BAAS,cAFD;AAGRC,0BAAM,QAHE;AAIRC,iCAAa;AAJL;AAPA;AADX,eAHY,C;;kBAoBVL,SAASM,K;;;;;gDACL,KAAKC,IAAL,CAAU,gBAAV,C;;;AAGLC,gB,GAAK,KAAKA,EAAL,E;;qBACU,KAAKC,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyBb,QAAzB,EAAmCE,QAAnC,EAA6CS,EAA7C,C;;;AAAfG,oB;;oBAEA,OAAOA,MAAP,KAAkB,Q;;;;;gDACb,KAAKJ,IAAL,CAAUK,OAAOD,MAAP,CAAV,C;;;;qBAGH,KAAKE,OAAL,CAAa,UAAb,EAAyBF,MAAzB,C;;;AACJ,mBAAKG,OAAL,CAAa;AACXC,wBAAQ;AADG,eAAb;;;;;AAKA,mBAAKD,OAAL,CAAa;AACXC,wBAAQ;AADG,eAAb;;;;;;;;;;;;;;;;;mBAMAC,Y;;;;;;;;qBACgB,KAAKxB,OAAL,E;;;AAAhBA,qB;;mBAEAA,O;;;;;;qBACI,KAAKqB,OAAL,CAAa,UAAb,EAAyB,IAAzB,C;;;;AAEN,kBAAI,KAAKI,MAAL,EAAJ,EAAmB;AACjB,qBAAKH,OAAL,CAAa;AACXC,0BAAQ;AADG,iBAAb;AAGD,eAJD,MAKK;AACH,qBAAKtB,QAAL,CAAc,GAAd;AACD;;;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACI,mBAAKA,QAAL,CAAc,GAAd;AACJ;;;;;;;;;;;;;;;;;mBAKFmB,M,mBAAOM,G,EAAI;AACP,YAAQA,GAAR;AACE,WAAK,iBAAL;AACI,eAAO,QAAP;AACJ,WAAK,gBAAL;AACI,eAAO,WAAP;AAJN;AAMH,G",
    "file": "../../../src/home/controller/login.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport revalidate from 'revalidator'\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async indexAction() {\n    let isLogin = await this.isLogin();\n\n    if (isLogin) {\n      return this.redirect('/');\n    }\n\n    return this.display(this.templateFile);\n  }\n\n  async loginAction() {\n    let isLogin = await this.isLogin();\n    if (!isLogin) {\n      let userName = this.post('userName');\n      let password = this.post('password');\n      let validate = revalidate.validate({\n        userName: userName,\n        password: password\n      }, {\n        properties: {\n          userName: {\n            required: true,\n            pattern: /^[A-Za-z0-9]+$/,\n            type: 'string',\n            description: '用户名错误'\n          },\n          password: {\n            required: true,\n            pattern: /^.*[^\\s]+.*$/,\n            type: 'string',\n            description: '密码错误'\n          }\n        }\n      });\n\n      if (!validate.valid) {\n        return this.fail('PASSWORD_ERROR');\n      }\n\n      let ip = this.ip();\n      let result = await this.model('user').login(userName, password, ip);\n\n      if (typeof result === 'string') {\n        return this.fail(getMsg(result));\n      }\n\n      await this.session('userInfo', result);\n        this.success({\n          status: 'ok'\n        });\n    }\n    else {\n        this.success({\n          status: 'ok'\n        });\n    }\n  }\n\n  async logoutAction () {\n    let isLogin = await this.isLogin();\n\n    if (isLogin) {\n      await this.session('userInfo', null);\n\n      if (this.isAjax()) {\n        this.success({\n          status: 'ok'\n        })\n      }\n      else {\n        this.redirect('/');\n      }\n    }\n    else {\n    //   if (this.isAjax()) {\n    //     this.success({\n    //       status: 'ok'\n    //     })\n    //   }\n    //   else {\n        this.redirect('/');\n    //   }\n    }\n  }\n\n\n  getMsg(msg){\n      switch (msg) {\n        case 'USER_NOT_EXIST]':\n            return '用户不存在!';\n        case 'PASSWORD_ERROR':\n            return '用户名或密码错误!';\n      }\n  }\n}\n"
    ]
}